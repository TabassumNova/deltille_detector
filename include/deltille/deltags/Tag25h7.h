/** DelTag family with 343 distinct codes.
    bits: 25,  minimum hamming: 7,  minimum complexity: 0.5
    seed: 19170

    Max bits corrected       False positive rate
                0                       0.00102222%%
                1                       0.0265777%%
                2                       0.333244%%
                3                       2.68435%%

    Generation time: 21.2388 s

    Hamming distance between pairs of codes (accounting for rotation):

    0000  0
    0001  0
    0002  0
    0003  0
    0004  0
    0005  0
    0006  0
    0007  3052
    0008  6454
    0009  8777
    0010  11595
    0011  11529
    0012  8800
    0013  5325
    0014  2240
    0015  704
    0016  153
    0017  23
    0018  1
    0019  0
    0020  0
    0021  0
    0022  0
    0023  0
    0024  0
    0025  0
**/

#pragma once

namespace Deltille {

const unsigned long long delTag25h7[] = {
    0x08f50a7LL, 0x11e566cLL, 0x1ad5c31LL, 0x0cb67bbLL, 0x15a6d80LL, 0x1e97345LL, 0x078790aLL,
    0x1968494LL, 0x0b4901eLL, 0x061a16dLL, 0x0f0a732LL, 0x12cbe46LL, 0x168d55aLL, 0x115e6a9LL,
    0x1a4ec6eLL, 0x18e14d1LL, 0x01d1a96LL, 0x0ac205bLL, 0x1ca2be5LL, 0x00642f9LL, 0x09548beLL,
    0x1b35448LL, 0x0d15fd2LL, 0x1606597LL, 0x1ef6b5cLL, 0x19c7cabLL, 0x0ba8835LL, 0x185a50eLL,
    0x014aad3LL, 0x132b65dLL, 0x039ea4aLL, 0x1940ce8LL, 0x0b21872LL, 0x09b40d5LL, 0x12a469aLL,
    0x0485224LL, 0x0d757e9LL, 0x1665daeLL, 0x1f56373LL, 0x01aa2eaLL, 0x0a9a8afLL, 0x003cb4dLL,
    0x121d6d7LL, 0x1b0dc9cLL, 0x1d61c13LL, 0x0f4279dLL, 0x1832d62LL, 0x1303eb1LL, 0x16c55c5LL,
    0x08a614fLL, 0x1a86cd9LL, 0x07389b2LL, 0x191953cLL, 0x13ea68bLL, 0x05cb215LL, 0x0ebb7daLL,
    0x17abd9fLL, 0x14d0e65LL, 0x1449ea2LL, 0x1d3a467LL, 0x12dc705LL, 0x116ef68LL, 0x1cb34a4LL,
    0x05a3a69LL, 0x04362ccLL, 0x186adcdLL, 0x0e0d06bLL, 0x0c9f8ceLL, 0x12b4f59LL, 0x0662a97LL,
    0x0387b5dLL, 0x1e58cacLL, 0x1039836LL, 0x082fa4bLL, 0x1a105d5LL, 0x06c22aeLL, 0x109904dLL,
    0x063b2ebLL, 0x181be75LL, 0x1bdd589LL, 0x0085477LL, 0x0d37150LL, 0x134c7dbLL, 0x07812dcLL,
    0x1686f2cLL, 0x1a48640LL, 0x18daea3LL, 0x13abff2LL, 0x1384846LL, 0x0e55995LL, 0x0926ae4LL,
    0x12170a9LL, 0x15d87bdLL, 0x04de40dLL, 0x0683c15LL, 0x03a8cdbLL, 0x0850bc9LL, 0x15028a2LL,
    0x1756819LL, 0x1b17f2dLL, 0x038152fLL, 0x0c71af4LL, 0x1815847LL, 0x044055dLL, 0x049fd74LL,
    0x0c22b9cLL, 0x1c95f89LL, 0x005769dLL, 0x1297a3eLL, 0x055eda2LL, 0x1189ab8LL, 0x14c4209LL,
    0x0958521LL, 0x12a82fdLL, 0x10b3b9dLL, 0x037af01LL, 0x020d764LL, 0x144db05LL, 0x0ad657dLL,
    0x1e840bbLL, 0x139f396LL, 0x103d499LL, 0x1544b9eLL, 0x0ea8550LL, 0x06177a2LL, 0x0e80da4LL,
    0x1fda96bLL, 0x1134532LL, 0x0a97ee4LL, 0x0bdded5LL, 0x14ce49aLL, 0x15b4c74LL, 0x1cb0ad9LL,
    0x1b7b3a7LL, 0x15c5533LL, 0x07de128LL, 0x0454a7fLL, 0x042d2d3LL, 0x1478f14LL, 0x1da1544LL,
    0x07d7afaLL, 0x05e339aLL, 0x11278d6LL, 0x03c748eLL, 0x1d03694LL, 0x1207a82LL, 0x00e5f26LL,
    0x1855178LL, 0x0eddbf0LL, 0x1b40971LL, 0x195cad0LL, 0x1b022d8LL, 0x13decc7LL, 0x1b6bd80LL,
    0x0e6b14fLL, 0x19bff4aLL, 0x1fade29LL, 0x141a995LL, 0x0e9cb8cLL, 0x1042394LL, 0x0e5e4f3LL,
    0x1c561bdLL, 0x0d28dc1LL, 0x074b7a1LL, 0x07ed2b4LL, 0x0571b91LL, 0x0d05278LL, 0x1885482LL,
    0x1c57455LL, 0x1bd0492LL, 0x1954d6fLL, 0x0c5e3cfLL, 0x02a87aeLL, 0x01452a2LL, 0x07d88f7LL,
    0x1d4cdbbLL, 0x1ea366bLL, 0x15151f6LL, 0x18f7a88LL, 0x13eec50LL, 0x08dc151LL, 0x0416d48LL,
    0x0abac5cLL, 0x17b525fLL, 0x1042cf6LL, 0x06b1eb6LL, 0x172f534LL, 0x1c0f48dLL, 0x1a6d8e8LL,
    0x1cae5d5LL, 0x06a64f2LL, 0x1fd5a9cLL, 0x0d7e80eLL, 0x1bae543LL, 0x17a8168LL, 0x14ee3acLL,
    0x0505be5LL, 0x0f929b9LL, 0x15590ecLL, 0x03996e0LL, 0x0a1ee41LL, 0x1b13e5bLL, 0x045ac3eLL,
    0x1f14ea0LL, 0x157616cLL, 0x1a113feLL, 0x0f2c6d9LL, 0x02d784cLL, 0x1eed259LL, 0x0bc3d13LL,
    0x1bc58f7LL, 0x03b5e2aLL, 0x158738dLL, 0x0a53710LL, 0x184b3daLL, 0x15ddbabLL, 0x0546c75LL,
    0x0b0a9ddLL, 0x0d202bbLL, 0x1923825LL, 0x0245827LL, 0x1f5c55eLL, 0x161e2d9LL, 0x12af780LL,
    0x134d195LL, 0x1d7d11dLL, 0x1eca9d4LL, 0x0621f52LL, 0x0ae4990LL, 0x1880aa6LL, 0x187a478LL,
    0x13ed0daLL, 0x0a68ef6LL, 0x1b7ddf6LL, 0x021144bLL, 0x06861c9LL, 0x035c337LL, 0x03400b4LL,
    0x12f6508LL, 0x109d1fbLL, 0x056a37bLL, 0x05f6239LL, 0x160da72LL, 0x08e2ccaLL, 0x1789a65LL,
    0x12e533fLL, 0x10ea5b1LL, 0x1abe4eaLL, 0x070c8aeLL, 0x0b00c97LL, 0x1f73996LL, 0x1cf17aaLL,
    0x10075cbLL, 0x0d9376eLL, 0x11748cdLL, 0x089472cLL, 0x15fad07LL, 0x1adfb5bLL, 0x03d501bLL,
    0x112d267LL, 0x0fe6ddbLL, 0x1bf2a34LL, 0x025d1aaLL, 0x18bb610LL, 0x131af56LL, 0x14b0392LL,
    0x036c44cLL, 0x0a0afcaLL, 0x05fbbf6LL, 0x1d2f641LL, 0x1d45c24LL, 0x0086e96LL, 0x1fd3391LL,
    0x0f1720bLL, 0x0db1334LL, 0x159e14fLL, 0x02e5641LL, 0x06582c4LL, 0x13615b8LL, 0x12627eaLL,
    0x1ca305dLL, 0x1a37d5eLL, 0x13c0e53LL, 0x0eb4d46LL, 0x09460c9LL, 0x1935385LL, 0x12bfc05LL,
    0x064d85dLL, 0x1de2b28LL, 0x01e8625LL, 0x1996872LL, 0x043109fLL, 0x1711ce7LL, 0x086b8aeLL,
    0x15e3ea7LL, 0x0f4ff48LL, 0x0d1c871LL, 0x0c96bf6LL, 0x15bf6edLL, 0x1979ec9LL, 0x11e350dLL,
    0x04f8e93LL, 0x0466538LL, 0x0c65cffLL, 0x033c56bLL, 0x056561eLL, 0x05c9db4LL, 0x07f41afLL,
    0x1a714e2LL, 0x0348fecLL, 0x0109f51LL, 0x1299cfeLL, 0x13cc622LL, 0x1346aafLL, 0x13a67e5LL,
    0x0a07257LL, 0x0288ad0LL, 0x0b1dfa3LL, 0x0e4693eLL, 0x0dfb51eLL, 0x1bba6c4LL, 0x1b88de7LL,
    0x1f435c3LL, 0x1cdd26fLL, 0x15f7a45LL, 0x127e9a4LL, 0x081aab8LL, 0x0c2ae6dLL, 0x0712a66LL,
    0x191b782LL, 0x15f5690LL, 0x01d5b73LL, 0x1b9085dLL, 0x1c88c6aLL, 0x013048aLL, 0x1f4b2aaLL,
    0x075b19cLL, 0x1186ac1LL, 0x0da2c30LL, 0x1cc5852LL, 0x175ce4dLL, 0x0654621LL, 0x1333476LL};

static const TagCodes delTagCodes25h7 =
    TagCodes("delTag25h7", 25, 7, delTag25h7, sizeof(delTag25h7) / sizeof(delTag25h7[0]));

} // namespace Deltille
